"use strict";(self.webpackChunkweb_3_blog=self.webpackChunkweb_3_blog||[]).push([[7487],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),y=a,f=p["".concat(s,".").concat(y)]||p[y]||u[y]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1053:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},i="call  \u8c03\u7528",l={unversionedId:"solidity/solidity_basic/call",id:"solidity/solidity_basic/call",title:"call  \u8c03\u7528",description:"call \u662f\u4e00\u4e2a\u8c03\u7528\u5176\u4ed6\u5408\u7ea6\u7684\u4f4e\u7ea7\u51fd\u6570\u3002",source:"@site/docs/solidity/solidity_basic/31_call.md",sourceDirName:"solidity/solidity_basic",slug:"/solidity/solidity_basic/call",permalink:"/docs/solidity/solidity_basic/call",draft:!1,tags:[],version:"current",sidebarPosition:31,frontMatter:{},sidebar:"solidity",previous:{title:"\u56de\u9000\u51fd\u6570",permalink:"/docs/solidity/solidity_basic/fallback"},next:{title:"\u59d4\u6258\u8c03\u7528",permalink:"/docs/solidity/solidity_basic/delegatecall"}},s={},c=[],d={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"call--\u8c03\u7528"},"call  \u8c03\u7528"),(0,a.kt)("p",null,"call \u662f\u4e00\u4e2a\u8c03\u7528\u5176\u4ed6\u5408\u7ea6\u7684\u4f4e\u7ea7\u51fd\u6570\u3002"),(0,a.kt)("p",null,"\u5f53\u60a8\u53ea\u662f\u901a\u8fc7\u8c03\u7528\u56de\u9000\u51fd\u6570\u53d1\u9001\u4ee5\u592a\u5e01\u65f6\uff0c\u8fd9\u662f\u63a8\u8350\u7684\u65b9\u6cd5\u3002"),(0,a.kt)("p",null,"\u4f46\u662f\uff0c\u8fd9\u4e0d\u662f\u8c03\u7528\u73b0\u6709\u51fd\u6570\u7684\u63a8\u8350\u65b9\u6cd5\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\ncontract Receiver {\n    event Received(address caller, uint amount, string message);\n\n    fallback() external payable {\n        emit Received(msg.sender, msg.value, "Fallback was called");\n    }\n\n    function foo(string memory _message, uint _x) public payable returns (uint) {\n        emit Received(msg.sender, msg.value, _message);\n\n        return _x + 1;\n    }\n}\n\ncontract Caller {\n    event Response(bool success, bytes data);\n\n    // Let\'s imagine that contract B does not have the source code for\n    // contract A, but we do know the address of A and the function to call.\n    function testCallFoo(address payable _addr) public payable {\n        // You can send ether and specify a custom gas amount\n        (bool success, bytes memory data) = _addr.call{value: msg.value, gas: 5000}(\n            abi.encodeWithSignature("foo(string,uint256)", "call foo", 123)\n        );\n\n        emit Response(success, data);\n    }\n\n    // Calling a function that does not exist triggers the fallback function.\n    function testCallDoesNotExist(address _addr) public {\n        (bool success, bytes memory data) = _addr.call(\n            abi.encodeWithSignature("doesNotExist()")\n        );\n\n        emit Response(success, data);\n    }\n}\n')))}u.isMDXComponent=!0}}]);