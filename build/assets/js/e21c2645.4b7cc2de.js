"use strict";(self.webpackChunkweb_3_blog=self.webpackChunkweb_3_blog||[]).push([[8783],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=u(t),d=a,f=m["".concat(p,".").concat(d)]||m[d]||c[d]||l;return t?r.createElement(f,i(i({ref:n},s),{},{components:t})):r.createElement(f,i({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=m;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9270:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var r=t(7462),a=(t(7294),t(3905));const l={},i="\u7ebf\u7a0b\u540c\u6b65-\u6d88\u606f\u540c\u6b65",o={unversionedId:"rust/rust\u591a\u7ebf\u7a0b\u5e76\u53d1\u7f16\u7a0b/\u7ebf\u7a0b\u540c\u6b65_\u6d88\u606f\u4f20\u9012",id:"rust/rust\u591a\u7ebf\u7a0b\u5e76\u53d1\u7f16\u7a0b/\u7ebf\u7a0b\u540c\u6b65_\u6d88\u606f\u4f20\u9012",title:"\u7ebf\u7a0b\u540c\u6b65-\u6d88\u606f\u540c\u6b65",description:"\u6d88\u606f\u901a\u9053\uff0c\u7c7b\u6bd4go\u4e2d\u7684\u7ba1\u9053\u3002",source:"@site/docs\\rust\\rust\u591a\u7ebf\u7a0b\u5e76\u53d1\u7f16\u7a0b\\\u7ebf\u7a0b\u540c\u6b65_\u6d88\u606f\u4f20\u9012.md",sourceDirName:"rust/rust\u591a\u7ebf\u7a0b\u5e76\u53d1\u7f16\u7a0b",slug:"/rust/rust\u591a\u7ebf\u7a0b\u5e76\u53d1\u7f16\u7a0b/\u7ebf\u7a0b\u540c\u6b65_\u6d88\u606f\u4f20\u9012",permalink:"/docs/rust/rust\u591a\u7ebf\u7a0b\u5e76\u53d1\u7f16\u7a0b/\u7ebf\u7a0b\u540c\u6b65_\u6d88\u606f\u4f20\u9012",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"rust",previous:{title:"\u591a\u7ebf\u7a0b\u7684\u4f7f\u7528",permalink:"/docs/rust/rust\u591a\u7ebf\u7a0b\u5e76\u53d1\u7f16\u7a0b/\u591a\u7ebf\u7a0b\u7684\u4f7f\u7528"},next:{title:"\u7ebf\u7a0b\u540c\u6b65-\u9501",permalink:"/docs/rust/rust\u591a\u7ebf\u7a0b\u5e76\u53d1\u7f16\u7a0b/\u7ebf\u7a0b\u540c\u6b65_\u9501"}},p={},u=[{value:"\u591a\u53d1\u9001\u8005-\u5355\u63a5\u6536\u8005",id:"\u591a\u53d1\u9001\u8005-\u5355\u63a5\u6536\u8005",level:2},{value:"\u4f7f\u7528for\u8fdb\u884c\u5faa\u73af\u63a5\u6536\u6570\u636e",id:"\u4f7f\u7528for\u8fdb\u884c\u5faa\u73af\u63a5\u6536\u6570\u636e",level:2},{value:"\u5173\u95ed\u901a\u9053",id:"\u5173\u95ed\u901a\u9053",level:2},{value:"\u4f20\u8f93\u5177\u6709\u6240\u6709\u6743\u7684\u6570\u636e",id:"\u4f20\u8f93\u5177\u6709\u6240\u6709\u6743\u7684\u6570\u636e",level:2},{value:"\u4f20\u8f93\u591a\u79cd\u7c7b\u578b\u7684\u6570\u636e",id:"\u4f20\u8f93\u591a\u79cd\u7c7b\u578b\u7684\u6570\u636e",level:2}],s={toc:u};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u7ebf\u7a0b\u540c\u6b65-\u6d88\u606f\u540c\u6b65"},"\u7ebf\u7a0b\u540c\u6b65-\u6d88\u606f\u540c\u6b65"),(0,a.kt)("p",null,"\u6d88\u606f\u901a\u9053\uff0c\u7c7b\u6bd4go\u4e2d\u7684\u7ba1\u9053\u3002"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u591a\u53d1\u9001\u8005 -> \u5355\u63a5\u6536\u8005"),(0,a.kt)("li",{parentName:"ul"},"\u591a\u53d1\u9001\u8005 -> \u591a\u63a5\u6536\u8005")),(0,a.kt)("h2",{id:"\u591a\u53d1\u9001\u8005-\u5355\u63a5\u6536\u8005"},"\u591a\u53d1\u9001\u8005-\u5355\u63a5\u6536\u8005"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'use std::sync::mpsc;\nuse std::thread;\n\nfn main() {\n    // \u521b\u5efa\u901a\u9053\n    let (tx, rc) = mpsc::channel();\n    \n    // \u521b\u5efa\u7ebf\u7a0b\uff0c\u53d1\u9001\u6d88\u606f\n    thread::spawn(move || {\n        tx.send(1).unwrap();\n        // \u4e0b\u9762\u4ee3\u7801\u5c06\u62a5\u9519\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u81ea\u52a8\u63a8\u5bfc\u51fa\u901a\u9053\u4f20\u9012\u7684\u503c\u662fi32\u7c7b\u578b\n        // \u90a3\u4e48Option<i32>\u7c7b\u578b\u5c06\u4ea7\u751f\u4e0d\u5339\u914d\u9519\u8bef\n        // tx.send(Some(1)).unwrap()\n    });\n    \n    // \u5728\u4e3b\u7ebf\u7a0b\u4e2d\u63a5\u6536\u5b50\u7ebf\u7a0b\u53d1\u9001\u7684\u6d88\u606f\u5e76\u8f93\u51fa\n    println!("receive {}", rx.recv().unwrap());\n    \n    // or \u4e0d\u963b\u585e\u7684try_recv\n    println!("receive {:?}", rx.try_recv());\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tx"),",",(0,a.kt)("inlineCode",{parentName:"li"},"rx"),"\u5bf9\u5e94\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\uff0c\u5b83\u4eec\u7684\u7c7b\u578b\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u63a8\u5bfc: ",(0,a.kt)("inlineCode",{parentName:"li"},"tx.send(1)"),"\u53d1\u9001\u4e86\u6574\u6570\uff0c\u56e0\u6b64\u5b83\u4eec\u5206\u522b\u662f",(0,a.kt)("inlineCode",{parentName:"li"},"mpsc::Sender<i32>"),"\u548c",(0,a.kt)("inlineCode",{parentName:"li"},"mpsc::Receiver<i32>"),"\u7c7b\u578b\uff0c\u9700\u8981\u6ce8\u610f\uff0c\u7531\u4e8e\u5185\u90e8\u662f\u6cdb\u578b\u5b9e\u73b0\uff0c\u4e00\u65e6\u7c7b\u578b\u88ab\u63a8\u5bfc\u786e\u5b9a\uff0c\u8be5\u901a\u9053\u5c31\u53ea\u80fd\u4f20\u9012\u5bf9\u5e94\u7c7b\u578b\u7684\u503c, \u4f8b\u5982\u6b64\u4f8b\u4e2d\u975e",(0,a.kt)("inlineCode",{parentName:"li"},"i32"),"\u7c7b\u578b\u7684\u503c\u5c06\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef"),(0,a.kt)("li",{parentName:"ul"},"\u63a5\u6536\u6d88\u606f\u7684\u64cd\u4f5c",(0,a.kt)("inlineCode",{parentName:"li"},"rx.recv()"),"\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c\u76f4\u5230\u8bfb\u53d6\u5230\u503c\uff0c\u6216\u8005\u901a\u9053\u88ab\u5173\u95ed"),(0,a.kt)("li",{parentName:"ul"},"\u9700\u8981\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"move"),"\u5c06",(0,a.kt)("inlineCode",{parentName:"li"},"tx"),"\u7684\u6240\u6709\u6743\u8f6c\u79fb\u5230\u5b50\u7ebf\u7a0b\u7684\u95ed\u5305\u4e2d")),(0,a.kt)("h2",{id:"\u4f7f\u7528for\u8fdb\u884c\u5faa\u73af\u63a5\u6536\u6570\u636e"},"\u4f7f\u7528for\u8fdb\u884c\u5faa\u73af\u63a5\u6536\u6570\u636e"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5355\u4e00\u53d1\u9001\u8005")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'use std::sync::mpsc;\nuse std::thread;\nuse std::time::Duration;\n\nfn main() {\n    let (tx, rx) = mpsc::channel();\n\n    thread::spawn(move || {\n        let vals = vec![\n            String::from("hi"),\n            String::from("from"),\n            String::from("the"),\n            String::from("thread"),\n        ];\n\n        for val in vals {\n            tx.send(val).unwrap();\n            thread::sleep(Duration::from_secs(1));\n        }\n    });\n\n    for received in rx {\n        println!("Got: {}", received);\n    }\n}\n\n// \u4e3b\u7ebf\u7a0b\u548c\u5b50\u7ebf\u7a0b\u662f\u5e76\u53d1\u8fd0\u884c\u7684\uff0c\u5b50\u7ebf\u7a0b\u5728\u4e0d\u505c\u7684\u53d1\u9001\u6d88\u606f -> \u4f11\u7720 1 \u79d2\uff0c\n// \u4e0e\u6b64\u540c\u65f6\uff0c\u4e3b\u7ebf\u7a0b\u4f7f\u7528for\u5faa\u73af\u963b\u585e\u7684\u4ecerx\u8fed\u4ee3\u5668\u4e2d\u63a5\u6536\u6d88\u606f\uff0c\n// \u5f53\u5b50\u7ebf\u7a0b\u8fd0\u884c\u5b8c\u6210\u65f6\uff0c\u53d1\u9001\u8005tx\u4f1a\u968f\u4e4b\u88abdrop\uff0c\n// \u6b64\u65f6for\u5faa\u73af\u5c06\u88ab\u7ec8\u6b62\uff0c\u6700\u7ec8main\u7ebf\u7a0b\u6210\u529f\u7ed3\u675f\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u591a\u53d1\u9001\u8005")),(0,a.kt)("p",null,"\u7531\u4e8e\u5b50\u7ebf\u7a0b\u4f1a\u62ff\u8d70\u53d1\u9001\u8005\u7684\u6240\u6709\u6743\uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u5bf9\u53d1\u9001\u8005\u8fdb\u884c\u514b\u9686\uff0c\u7136\u540e\u8ba9\u6bcf\u4e2a\u7ebf\u7a0b\u62ff\u8d70\u5b83\u7684\u4e00\u4efd\u62f7\u8d1d\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'use std::sync::mpsc;\nuse std::thread;\n\nfn main() {\n    let (tx, rx) = mpsc::channel();\n    let tx1 = tx.clone();\n    thread::spawn(move || {\n        tx.send(String::from("hi from raw tx")).unwrap();\n    });\n\n    thread::spawn(move || {\n        tx1.send(String::from("hi from cloned tx")).unwrap();\n    });\n\n    for received in rx {\n        println!("Got: {}", received);\n    }\n}\n\n//\u9700\u8981\u6240\u6709\u7684\u53d1\u9001\u8005\u90fd\u88abdrop\u6389\u540e\uff0c\u63a5\u6536\u8005rx\u624d\u4f1a\u6536\u5230\u9519\u8bef\uff0c\u8fdb\u800c\u8df3\u51fafor\u5faa\u73af\uff0c\u6700\u7ec8\u7ed3\u675f\u4e3b\u7ebf\u7a0b\n//\u8fd9\u91cc\u867d\u7136\u7528\u4e86clone\u4f46\u662f\u5e76\u4e0d\u4f1a\u5f71\u54cd\u6027\u80fd\uff0c\u56e0\u4e3a\u5b83\u5e76\u4e0d\u5728\u70ed\u70b9\u4ee3\u7801\u8def\u5f84\u4e2d\uff0c\u4ec5\u4ec5\u4f1a\u88ab\u6267\u884c\u4e00\u6b21\n//\u7531\u4e8e\u4e24\u4e2a\u5b50\u7ebf\u7a0b\u8c01\u5148\u521b\u5efa\u5b8c\u6210\u662f\u672a\u77e5\u7684\uff0c\u56e0\u6b64\u54ea\u6761\u6d88\u606f\u5148\u53d1\u9001\u4e5f\u662f\u672a\u77e5\u7684\uff0c\u6700\u7ec8\u4e3b\u7ebf\u7a0b\u7684\u8f93\u51fa\u987a\u5e8f\u4e5f\u4e0d\u786e\u5b9a\n')),(0,a.kt)("h2",{id:"\u5173\u95ed\u901a\u9053"},"\u5173\u95ed\u901a\u9053"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u6240\u6709\u53d1\u9001\u8005\u88ab",(0,a.kt)("inlineCode",{parentName:"strong"},"drop"),"\u6216\u8005\u6240\u6709\u63a5\u6536\u8005\u88ab",(0,a.kt)("inlineCode",{parentName:"strong"},"drop"),"\u540e\uff0c\u901a\u9053\u4f1a\u81ea\u52a8\u5173\u95ed"),"\u3002"),(0,a.kt)("h2",{id:"\u4f20\u8f93\u5177\u6709\u6240\u6709\u6743\u7684\u6570\u636e"},"\u4f20\u8f93\u5177\u6709\u6240\u6709\u6743\u7684\u6570\u636e"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u82e5\u503c\u7684\u7c7b\u578b\u5b9e\u73b0\u4e86",(0,a.kt)("inlineCode",{parentName:"li"},"Copy"),"\u7279\u5f81\uff0c\u5219\u76f4\u63a5\u590d\u5236\u4e00\u4efd\u8be5\u503c\uff0c\u7136\u540e\u4f20\u8f93\u8fc7\u53bb\uff0c\u4f8b\u5982\u4e4b\u524d\u7684",(0,a.kt)("inlineCode",{parentName:"li"},"i32"),"\u7c7b\u578b"),(0,a.kt)("li",{parentName:"ul"},"\u82e5\u503c\u6ca1\u6709\u5b9e\u73b0",(0,a.kt)("inlineCode",{parentName:"li"},"Copy"),"\uff0c\u5219\u5b83\u7684\u6240\u6709\u6743\u4f1a\u88ab\u8f6c\u79fb\u7ed9\u63a5\u6536\u7aef\uff0c\u5728\u53d1\u9001\u7aef\u7ee7\u7eed\u4f7f\u7528\u8be5\u503c\u5c06\u62a5\u9519")),(0,a.kt)("h2",{id:"\u4f20\u8f93\u591a\u79cd\u7c7b\u578b\u7684\u6570\u636e"},"\u4f20\u8f93\u591a\u79cd\u7c7b\u578b\u7684\u6570\u636e"),(0,a.kt)("p",null,"\u4e00\u4e2a\u6d88\u606f\u901a\u9053\u53ea\u80fd\u4f20\u8f93\u4e00\u79cd\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5982\u679c\u4f60\u60f3\u8981\u4f20\u8f93\u591a\u79cd\u7c7b\u578b\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u7c7b\u578b\u521b\u5efa\u4e00\u4e2a\u901a\u9053\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u679a\u4e3e\u7c7b\u578b\u6765\u5b9e\u73b0\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'use std::sync::mpsc::{self, Receiver, Sender};\n\nenum Fruit {\n    Apple(u8),\n    Orange(String)\n}\n\nfn main() {\n    let (tx, rx): (Sender<Fruit>, Receiver<Fruit>) = mpsc::channel();\n\n    tx.send(Fruit::Orange("sweet".to_string())).unwrap();\n    tx.send(Fruit::Apple(2)).unwrap();\n\n    for _ in 0..2 {\n        match rx.recv().unwrap() {\n            Fruit::Apple(count) => println!("received {} apples", count),\n            Fruit::Orange(flavor) => println!("received {} oranges", flavor),\n        }\n    }\n}\n')))}c.isMDXComponent=!0}}]);