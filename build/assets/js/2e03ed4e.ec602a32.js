"use strict";(self.webpackChunkweb_3_blog=self.webpackChunkweb_3_blog||[]).push([[8217],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>y});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),y=i,m=d["".concat(l,".").concat(y)]||d[y]||p[y]||o;return t?r.createElement(m,a(a({ref:n},u),{},{components:t})):r.createElement(m,a({ref:n},u))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3943:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const o={},a="\u7b7e\u540d\u66ff\u6362",s={unversionedId:"solidity/solidity_hack/signature_replay",id:"solidity/solidity_hack/signature_replay",title:"\u7b7e\u540d\u66ff\u6362",description:"\u94fe\u4e0b\u7b7e\u540d\uff0c\u5e76\u4e14\u5408\u7ea6\u5728\u6267\u884c\u51fd\u6570\u9700\u8981\u7b7e\u540d\u3002",source:"@site/docs/solidity/solidity_hack/signature_replay.md",sourceDirName:"solidity/solidity_hack",slug:"/solidity/solidity_hack/signature_replay",permalink:"/docs/solidity/solidity_hack/signature_replay",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"solidity",previous:{title:"\u64cd\u4f5c\u533a\u5757\u65f6\u95f4\u6233",permalink:"/docs/solidity/solidity_hack/block_timestamp_manipulation"},next:{title:"\u7ed5\u8fc7\u5408\u7ea6\u5927\u5c0f\u68c0\u67e5",permalink:"/docs/solidity/solidity_hack/bypass_contract_size_check"}},l={},c=[{value:"\u9884\u9632\u6280\u5de7",id:"\u9884\u9632\u6280\u5de7",level:3}],u={toc:c};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u7b7e\u540d\u66ff\u6362"},"\u7b7e\u540d\u66ff\u6362"),(0,i.kt)("p",null,"\u94fe\u4e0b\u7b7e\u540d\uff0c\u5e76\u4e14\u5408\u7ea6\u5728\u6267\u884c\u51fd\u6570\u9700\u8981\u7b7e\u540d\u3002"),(0,i.kt)("p",null,"\u94fe\u4e0b\u7b7e\u540d\uff0c\u94fe\u4e0a\u9a8c\u8bc1\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u51cf\u5c11\u94fe\u4e0a\u4ea4\u6613\u91cf"),(0,i.kt)("li",{parentName:"ul"},"\u6ca1\u6709 gas\u4ea4\u6613\uff0c\u6210\u4e3a\u5143\u4ea4\u6613")),(0,i.kt)("p",null,"\u6f0f\u6d1e\u63cf\u8ff0\uff1a"),(0,i.kt)("p",null,"\u591a\u6b21\u4f7f\u7528\u76f8\u540c\u7684\u7b7e\u540d\u6267\u884c\u4e00\u4e2a\u51fd\u6570\u3002\u5982\u679c\u7b7e\u540d\u8005\u7684\u610f\u56fe\u6388\u6743\u4e00\u6b21\u4ea4\u6613\uff0c\u8fd9\u53ef\u80fd\u662f\u6709\u5bb3\u7684\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\npragma experimental ABIEncoderV2;\n\nimport "github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.5/contracts/utils/cryptography/ECDSA.sol";\n\ncontract MultiSigWallet {\n    using ECDSA for bytes32;\n\n    address[2] public owners;\n\n    constructor(address[2] memory _owners) payable {\n        owners = _owners;\n    }\n    \n     function deposit() external payable {}    function transfer(\n        address _to,\n        uint _amount,\n        bytes[2] memory _sigs\n    ) external {\n        bytes32 txHash = getTxHash(_to, _amount);\n        require(_checkSigs(_sigs, txHash), "invalid sig");\n\n        (bool sent, ) = _to.call{value: _amount}("");\n        require(sent, "Failed to send Ether");\n    }\n\n    function getTxHash(address _to, uint _amount) public view returns (bytes32) {\n        return keccak256(abi.encodePacked(_to, _amount));\n    }\n\n    function _checkSigs(bytes[2] memory _sigs, bytes32 _txHash)\n        private\n        view\n        returns (bool)\n    {\n        bytes32 ethSignedHash = _txHash.toEthSignedMessageHash();\n\n        for (uint i = 0; i < _sigs.length; i++) {\n            address signer = ethSignedHash.recover(_sigs[i]);\n            bool valid = signer == owners[i];\n\n            if (!valid) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}  \n')),(0,i.kt)("h3",{id:"\u9884\u9632\u6280\u5de7"},"\u9884\u9632\u6280\u5de7"),(0,i.kt)("p",null,"\u4f7f\u7528 nonce \u548c\u5408\u7ea6\u5730\u5740\u7b7e\u7f72\u6d88\u606f\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"    function getTxHash(\n        address _to,\n        uint _amount,\n        uint _nonce\n    ) public view returns (bytes32) {\n        return keccak256(abi.encodePacked(address(this), _to, _amount, _nonce));\n    }\n")))}p.isMDXComponent=!0}}]);