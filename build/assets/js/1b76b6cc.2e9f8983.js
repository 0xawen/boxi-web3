"use strict";(self.webpackChunkweb_3_blog=self.webpackChunkweb_3_blog||[]).push([[4607],{3905:(e,t,n)=>{n.d(t,{Zo:()=>o,kt:()=>k});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},o=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),c=p(n),k=l,d=c["".concat(u,".").concat(k)]||c[k]||m[k]||a;return n?r.createElement(d,i(i({ref:t},o),{},{components:n})):r.createElement(d,i({ref:t},o))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=c;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:l,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5218:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(7462),l=(n(7294),n(3905));const a={},i="\u5b57\u7b26\u4e32\u4e0e\u5207\u7247",s={unversionedId:"rust/rust\u57fa\u7840\u77e5\u8bc6/\u5b57\u7b26\u4e32\u4e0e\u5207\u7247",id:"rust/rust\u57fa\u7840\u77e5\u8bc6/\u5b57\u7b26\u4e32\u4e0e\u5207\u7247",title:"\u5b57\u7b26\u4e32\u4e0e\u5207\u7247",description:"\u4ec0\u4e48\u662f\u5207\u7247",source:"@site/docs\\rust\\rust\u57fa\u7840\u77e5\u8bc6\\\u5b57\u7b26\u4e32\u4e0e\u5207\u7247.md",sourceDirName:"rust/rust\u57fa\u7840\u77e5\u8bc6",slug:"/rust/rust\u57fa\u7840\u77e5\u8bc6/\u5b57\u7b26\u4e32\u4e0e\u5207\u7247",permalink:"/docs/rust/rust\u57fa\u7840\u77e5\u8bc6/\u5b57\u7b26\u4e32\u4e0e\u5207\u7247",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"rust",previous:{title:"\u679a\u4e3e",permalink:"/docs/rust/rust\u57fa\u7840\u77e5\u8bc6/\u679a\u4e3e"},next:{title:"\u52a8\u6001\u6570\u7ec4",permalink:"/docs/rust/rust\u57fa\u7840\u77e5\u8bc6/\u52a8\u6001\u6570\u7ec4"}},u={},p=[{value:"\u4ec0\u4e48\u662f\u5207\u7247",id:"\u4ec0\u4e48\u662f\u5207\u7247",level:2},{value:"\u4ec0\u4e48\u662f\u5b57\u7b26\u4e32",id:"\u4ec0\u4e48\u662f\u5b57\u7b26\u4e32",level:2},{value:"string \u4e0e &amp;str \u7684\u8f6c\u6362",id:"string-\u4e0e-str-\u7684\u8f6c\u6362",level:2},{value:"\u64cd\u4f5c\u5b57\u7b26\u4e32",id:"\u64cd\u4f5c\u5b57\u7b26\u4e32",level:2},{value:"\u5b57\u7b26\u4e32\u7d22\u5f15",id:"\u5b57\u7b26\u4e32\u7d22\u5f15",level:3},{value:"\u8ffd\u52a0\uff08push\uff09",id:"\u8ffd\u52a0push",level:3},{value:"\u63d2\u5165\uff08insert\uff09",id:"\u63d2\u5165insert",level:3},{value:"\u66ff\u6362\uff08replace\uff09",id:"\u66ff\u6362replace",level:3},{value:"\u5220\u9664\uff08delete\uff09",id:"\u5220\u9664delete",level:3},{value:"\u8fde\u63a5\uff08catenate\uff09",id:"\u8fde\u63a5catenate",level:3},{value:"\u64cd\u4f5cUTF-8\u5b57\u7b26\u4e32",id:"\u64cd\u4f5cutf-8\u5b57\u7b26\u4e32",level:3},{value:"\u5b57\u7b26",id:"\u5b57\u7b26",level:4},{value:"\u5b57\u8282",id:"\u5b57\u8282",level:4},{value:"\u83b7\u53d6\u5b57\u4e32",id:"\u83b7\u53d6\u5b57\u4e32",level:4}],o={toc:p};function m(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u5b57\u7b26\u4e32\u4e0e\u5207\u7247"},"\u5b57\u7b26\u4e32\u4e0e\u5207\u7247"),(0,l.kt)("h2",{id:"\u4ec0\u4e48\u662f\u5207\u7247"},"\u4ec0\u4e48\u662f\u5207\u7247"),(0,l.kt)("p",null,"\u5bf9\u5b57\u7b26\u4e32\u800c\u8a00\uff0c\u5c31\u662f\u5bf9",(0,l.kt)("inlineCode",{parentName:"p"},"string"),"\u4e2d\u67d0\u4e00\u90e8\u5206\u5f15\u7528\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'let s = String::from("hello world");\n\nlet hello = &s[0..5]\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u662f\u5207\u7247")),(0,l.kt)("h2",{id:"\u4ec0\u4e48\u662f\u5b57\u7b26\u4e32"},"\u4ec0\u4e48\u662f\u5b57\u7b26\u4e32"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Rust \u4e2d\u7684\u5b57\u7b26\u662f Unicode \u7c7b\u578b\uff0c\u56e0\u6b64\u6bcf\u4e2a\u5b57\u7b26\u5360\u636e 4 \u4e2a\u5b57\u8282\u5185\u5b58\u7a7a\u95f4\uff0c")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u4f46\u662f\u5728\u5b57\u7b26\u4e32\u4e2d\u4e0d\u4e00\u6837\uff0c\u5b57\u7b26\u4e32\u662f UTF-8 \u7f16\u7801\uff0c\u4e5f\u5c31\u662f\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u6240\u5360\u7684\u5b57\u8282\u6570\u662f\u53d8\u5316\u7684(1 - 4)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u5f53 Rust \u7528\u6237\u63d0\u5230\u5b57\u7b26\u4e32\u65f6\uff0c\u5f80\u5f80\u6307\u7684\u5c31\u662f ",(0,l.kt)("inlineCode",{parentName:"strong"},"String")," \u7c7b\u578b\u548c ",(0,l.kt)("inlineCode",{parentName:"strong"},"&str")," \u5b57\u7b26\u4e32\u5207\u7247\u7c7b\u578b\uff0c\u8fd9\u4e24\u4e2a\u7c7b\u578b\u90fd\u662f UTF-8 \u7f16\u7801"),"\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"string "),(0,l.kt)("li",{parentName:"ul"},"str"),(0,l.kt)("li",{parentName:"ul"},"&str")),(0,l.kt)("h2",{id:"string-\u4e0e-str-\u7684\u8f6c\u6362"},"string \u4e0e &str \u7684\u8f6c\u6362"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'String::from("hellow world")')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"hellow world".to_string()'))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'// \u5bf9\u5b57\u7b26\u4e32\u53d6\u5f15\u7528\u5c31\u53ef\u4ee5\nfn mian() {\n    le s = String::from("hello world");\n    say_hello(&s);\n    say_hello(&s[..]);\n    say_hello(s.as_str());\n}\n\nfn say_hello(s: &str) {\n    println!("{}",s);\n}\n')),(0,l.kt)("h2",{id:"\u64cd\u4f5c\u5b57\u7b26\u4e32"},"\u64cd\u4f5c\u5b57\u7b26\u4e32"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"String")," \u662f\u53ef\u53d8\u5b57\u7b26\u4e32"),(0,l.kt)("h3",{id:"\u5b57\u7b26\u4e32\u7d22\u5f15"},"\u5b57\u7b26\u4e32\u7d22\u5f15"),(0,l.kt)("p",null,"\u4f7f\u7528\u7d22\u5f15\u8bbf\u95ee\u5b57\u7b26\u4e32\u5f0f\u4e0d\u53ef\u4ee5\u7684\u3002\u56e0\u4e3a\u5b57\u7b26\u4e32\u5e95\u5c42\u5f0fu8\u6570\u7ec4"),(0,l.kt)("h3",{id:"\u8ffd\u52a0push"},"\u8ffd\u52a0\uff08push\uff09"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"push()")," "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"push_str()"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let mut s = String::from("hello ");\n    s.push(\'r\');\n    println!("\u8ffd\u52a0\u5b57\u7b26 push() -> {}" , s);\n    \n    s.push_str("ust!");\n    println!("\u8ffd\u52a0\u5b57\u7b26\u4e32 push_str() -> {}", s);\n}\n')),(0,l.kt)("h3",{id:"\u63d2\u5165insert"},"\u63d2\u5165\uff08insert\uff09"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"insert")," "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"insert_str"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let mut s = String::from("hello rust!");\n    s.insert(5, ",");\n    println!("\u63d2\u5165\u5b57\u7b26 insert() -> {}" , s);\n    \n    s.insert_str(6, " i like");\n    println!("\u63d2\u5165\u5b57\u7b26\u4e32 insert_str() -> {}", s);\n}\n')),(0,l.kt)("h3",{id:"\u66ff\u6362replace"},"\u66ff\u6362\uff08replace\uff09"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"replace"))),(0,l.kt)("p",null,"\u9002\u7528\u4e8e String \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"&str")," \u7c7b\u578b\uff0c \u66ff\u6362\u6240\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32\u3002 \u8fd4\u56de\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u800c\u4e0d\u662f\u539f\u6765\u7684\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let string_replace = String::from("I like rust.");\n    let new_string_replace = string_replace.replace("rust", "RUST");\n    dbg!(new_string_replace);\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"replacen"))),(0,l.kt)("p",null,"\u9002\u7528\u4e8e String \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"&str")," \u7c7b\u578b\u3002 \u589e\u52a0\u4e86\u66ff\u6362\u4e2a\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let string_replace  = "I like rust. Learning rust is my favorite!";\n    \n    let new_string = string_replace.replacen("rust","RUST", 1);\n    dbg!(new_string_replace);\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"replace_range"))),(0,l.kt)("p",null,"\u8be5\u65b9\u6cd5\u9002\u7528\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," \u7c7b\u578b\u3002 \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u4e32\u8303\u56f4\uff0c \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u4e32\u3002\u662f\u5728\u539f\u6765\u7684\u5b57\u7b26\u4e32\u4e2d\u64cd\u4f5c\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let mut string_rep_range = String::from("I like rust");\n    string_rep_range.replace_range(7..8, "R");\n    dbg!(new_string_replace);\n}\n')),(0,l.kt)("h3",{id:"\u5220\u9664delete"},"\u5220\u9664\uff08delete\uff09"),(0,l.kt)("p",null,"\u4ec5\u4ec5\u662f\u7528\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"String")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pop()"),"  \u76f4\u63a5\u64cd\u4f5c\u539f\u6765\u7684\u5b57\u7b26\u4e32"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"remove()")," \u76f4\u63a5\u64cd\u4f5c\u539f\u6765\u7684\u5b57\u7b26\u4e32"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"truncate()"),"\u76f4\u63a5\u64cd\u4f5c\u539f\u6765\u7684\u5b57\u7b26\u4e32"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"clear()"),"\u76f4\u63a5\u64cd\u4f5c\u539f\u6765\u7684\u5b57\u7b26\u4e32")),(0,l.kt)("h3",{id:"\u8fde\u63a5catenate"},"\u8fde\u63a5\uff08catenate\uff09"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528 + \u6216\u8005 += \uff0c \u8fd4\u56de\u7684\u662f\u65b0\u7684\u5b57\u7b26\u4e32\u3002\u53d8\u91cf\u58f0\u660e\u53ef\u4ee5\u53bb\u6389 mut")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let string_append = String::from("hello ");\n    let string_rust = String::from("rust");\n    // &string_rust \u4f1a\u81ea\u52a8\u89e3\u5f15\u7528\u4e3a &str\n    let result = string_append + &string_rust;\n    let mut result = result + "!";\n    \n    result += "!!!";\n    \n    println!("\u8fde\u63a5\u5b57\u7b26\u4e32 + -> {}", result);\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"format!  \u9002\u7528\u4e8e ",(0,l.kt)("inlineCode",{parentName:"li"},"String"),"  \u548c",(0,l.kt)("inlineCode",{parentName:"li"},"&str"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    let s1 = "hello";\n    let s2 = String::from("rust");\n    \n    let s = format!("{} {}!", s1, s2);\n    \n    println!("{}", s);\n}\n')),(0,l.kt)("h3",{id:"\u64cd\u4f5cutf-8\u5b57\u7b26\u4e32"},"\u64cd\u4f5cUTF-8\u5b57\u7b26\u4e32"),(0,l.kt)("h4",{id:"\u5b57\u7b26"},"\u5b57\u7b26"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-RUST"},'// \u5982\u679c\u8981\u7528unicode \u904d\u5386\u5b57\u7b26\u4e32\uff0c\u4f7f\u7528 chars \u65b9\u6cd5\nfor c in "\u6211\u662f\u7a0b\u5e8f\u5458".chars() {\n    println!("{}", c);\n}\n')),(0,l.kt)("h4",{id:"\u5b57\u8282"},"\u5b57\u8282"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'// \u8fd4\u56de\u5b57\u7b26\u4e32\u5e95\u5c42\u5b57\u8282\u6570\u7ec4\nfor b in "\u6211\u662f\u7a0b\u5e8f\u5458".bytes() {\n     println!("{}", b);\n}\n}\n')),(0,l.kt)("h4",{id:"\u83b7\u53d6\u5b57\u4e32"},"\u83b7\u53d6\u5b57\u4e32"),(0,l.kt)("p",null,"\u60f3\u8981\u51c6\u786e\u7684\u4ece UTF-8 \u5b57\u7b26\u4e32\u4e2d\u83b7\u53d6\u5b50\u4e32\u662f\u8f83\u4e3a\u590d\u6742\u7684\u4e8b\u60c5\uff0c\u4f8b\u5982\u60f3\u8981\u4ece ",(0,l.kt)("inlineCode",{parentName:"p"},"holla\u4e2d\u56fd\u4eba\u0928\u092e\u0938\u094d\u0924\u0947")," \u8fd9\u79cd\u53d8\u957f\u7684\u5b57\u7b26\u4e32\u4e2d\u53d6\u51fa\u67d0\u4e00\u4e2a\u5b50\u4e32\uff0c\u4f7f\u7528\u6807\u51c6\u5e93\u4f60\u662f\u505a\u4e0d\u5230\u7684\u3002 "),(0,l.kt)("p",null,"\u53ef\u4ee5\u8003\u8651\u5c1d\u8bd5\u4e0b\u8fd9\u4e2a\u5e93:",(0,l.kt)("a",{parentName:"p",href:"https://crates.io/crates/utf8_slice"},"utf8_slice"),"\u3002"))}m.isMDXComponent=!0}}]);