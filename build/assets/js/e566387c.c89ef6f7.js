"use strict";(self.webpackChunkweb_3_blog=self.webpackChunkweb_3_blog||[]).push([[3025],{3905:(n,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>_});var e=r(7294);function o(n,t,r){return t in n?Object.defineProperty(n,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[t]=r,n}function a(n,t){var r=Object.keys(n);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(n);t&&(e=e.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),r.push.apply(r,e)}return r}function u(n){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(n,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(r,t))}))}return n}function s(n,t){if(null==n)return{};var r,e,o=function(n,t){if(null==n)return{};var r,e,o={},a=Object.keys(n);for(e=0;e<a.length;e++)r=a[e],t.indexOf(r)>=0||(o[r]=n[r]);return o}(n,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(e=0;e<a.length;e++)r=a[e],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(n,r)&&(o[r]=n[r])}return o}var i=e.createContext({}),c=function(n){var t=e.useContext(i),r=t;return n&&(r="function"==typeof n?n(t):u(u({},t),n)),r},l=function(n){var t=c(n.components);return e.createElement(i.Provider,{value:t},n.children)},p={inlineCode:"code",wrapper:function(n){var t=n.children;return e.createElement(e.Fragment,{},t)}},d=e.forwardRef((function(n,t){var r=n.components,o=n.mdxType,a=n.originalType,i=n.parentName,l=s(n,["components","mdxType","originalType","parentName"]),d=c(r),_=o,m=d["".concat(i,".").concat(_)]||d[_]||p[_]||a;return r?e.createElement(m,u(u({ref:t},l),{},{components:r})):e.createElement(m,u({ref:t},l))}));function _(n,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof n||o){var a=r.length,u=new Array(a);u[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=n,s.mdxType="string"==typeof n?n:o,u[1]=s;for(var c=2;c<a;c++)u[c]=r[c];return e.createElement.apply(null,u)}return e.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8166:(n,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>u,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var e=r(7462),o=(r(7294),r(3905));const a={},u="read multiple instructions",s={unversionedId:"rust_contract/solana/solana_\u5408\u7ea6\u5f00\u53d1\u5e93/read_multiple_instructions",id:"rust_contract/solana/solana_\u5408\u7ea6\u5f00\u53d1\u5e93/read_multiple_instructions",title:"read multiple instructions",description:"Solana \u5141\u8bb8\u6211\u4eec\u67e5\u770b\u5f53\u524d\u4e8b\u52a1\u4e2d\u7684\u6240\u6709\u6307\u4ee4\u3002",source:"@site/docs\\rust_contract\\solana\\02_solana_\u5408\u7ea6\u5f00\u53d1\u5e93\\read_multiple_instructions.md",sourceDirName:"rust_contract/solana/02_solana_\u5408\u7ea6\u5f00\u53d1\u5e93",slug:"/rust_contract/solana/solana_\u5408\u7ea6\u5f00\u53d1\u5e93/read_multiple_instructions",permalink:"/docs/rust_contract/solana/solana_\u5408\u7ea6\u5f00\u53d1\u5e93/read_multiple_instructions",draft:!1,tags:[],version:"current",frontMatter:{}},i={},c=[],l={toc:c};function p(n){let{components:t,...r}=n;return(0,o.kt)("wrapper",(0,e.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"read-multiple-instructions"},"read multiple instructions"),(0,o.kt)("p",null,"Solana \u5141\u8bb8\u6211\u4eec\u67e5\u770b\u5f53\u524d\u4e8b\u52a1\u4e2d\u7684\u6240\u6709\u6307\u4ee4\u3002"),(0,o.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u4e00\u4e2a\u53d8\u91cf\u4e2d\u5e76\u5bf9\u5176\u8fdb\u884c\u8fed\u4ee3\u3002"),(0,o.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u505a\u5f88\u591a\u4e8b\u60c5\uff0c\u6bd4\u5982\u68c0\u67e5\u53ef\u7591\u4ea4\u6613\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'use anchor_lang::{\n    prelude::*,\n    solana_program::{\n        sysvar,\n        serizlize_utils::{read_pubkey, read_u16}\n    }\n};\ndeclare_id!("8DJXJRV8DBFjJDYyU9cTHBVK1F1CTCi6JUBDVfyBxqsT");\n\n#[program]\npub mod cookbook{\n    user super::*;\n    \n    pub fn read_multiple_instruction<\'info>(ctx: Context<ReadMultipleInstruction>,creator_bump: u8) -> Result<()> {\n        let instruction_sysvar_account = &ctx.accounts.instruction_sysvar_account;\n        \n        let instruction_sysvar_account_info = instruction_sysvar_account.to_account_info();\n        \n        let id = "8DJXJRV8DBFjJDYyU9cTHBVK1F1CTCi6JUBDVfyBxqsT";\n        let instruction_sysvar = instruction_sysvar_account_info.data.borrow();\n\n        let mut idx = 0;\n        \n        let num_instructions = read_u16(&mut idx, &instruction_sysvar).map_err(|_| MyError::NoInstructionFound)?;\n        \n       for index in 0..num_instructions {\n            let mut current = 2 + (index * 2) as usize;\n            let start = read_u16(&mut current, &instruction_sysvar).unwrap();\n\n            current = start as usize;\n            let num_accounts = read_u16(&mut current, &instruction_sysvar).unwrap();\n            current += (num_accounts as usize) * (1 + 32);\n            let program_id = read_pubkey(&mut current, &instruction_sysvar).unwrap();\n\n            if program_id != id\n            {\n                msg!("Transaction had ix with program id {}", program_id);\n                return Err(MyError::SuspiciousTransaction.into());\n            }\n        }\n        Ok(())\n    }\n}\n\n#[derive(Accounts)]\n#[instruction(creator_bump:u8)]\npub struct ReadMultipleInstruction<\'info> {\n    #[account(address = sysvar::instructions::id())]\n    instruction_sysvar_account: UncheckedAccount<\'info>\n}\n\n#[error_code]\npub enum MyError {\n    #[msg("No instructions found")]\n    NoInstructionFound,\n    #[msg("Suspicious transaction detected")]\n    SuspiciousTransaction\n}\n')))}p.isMDXComponent=!0}}]);