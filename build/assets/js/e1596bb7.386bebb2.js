"use strict";(self.webpackChunkweb_3_blog=self.webpackChunkweb_3_blog||[]).push([[5411],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),y=a,b=d["".concat(p,".").concat(y)]||d[y]||u[y]||o;return n?r.createElement(b,i(i({ref:t},s),{},{components:n})):r.createElement(b,i({ref:t},s))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4992:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},i="\u53ef\u5347\u7ea7\u7684erc20\u5408\u7ea6",l={unversionedId:"solidity/solidity_contracts/openzeppelin_upgradeable/erc20-upgradeable-example",id:"solidity/solidity_contracts/openzeppelin_upgradeable/erc20-upgradeable-example",title:"\u53ef\u5347\u7ea7\u7684erc20\u5408\u7ea6",description:"\u5408\u7ea6\u7f16\u5199",source:"@site/docs/solidity/solidity_contracts/openzeppelin_upgradeable/erc20-upgradeable-example.md",sourceDirName:"solidity/solidity_contracts/openzeppelin_upgradeable",slug:"/solidity/solidity_contracts/openzeppelin_upgradeable/erc20-upgradeable-example",permalink:"/docs/solidity/solidity_contracts/openzeppelin_upgradeable/erc20-upgradeable-example",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"solidity",previous:{title:"\u53ef\u4ee5\u5347\u7ea7\u7684\u5408\u7ea6",permalink:"/docs/solidity/solidity_contracts/openzeppelin_upgradeable/\u53ef\u5347\u7ea7\u5408\u7ea6"},next:{title:"solidity \u5e38\u89c1\u6f0f\u6d1e\u603b\u7ed3",permalink:"/docs/solidity/solidity_hack/"}},p={},c=[{value:"\u5408\u7ea6\u7f16\u5199",id:"\u5408\u7ea6\u7f16\u5199",level:3}],s={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u53ef\u5347\u7ea7\u7684erc20\u5408\u7ea6"},"\u53ef\u5347\u7ea7\u7684erc20\u5408\u7ea6"),(0,a.kt)("h3",{id:"\u5408\u7ea6\u7f16\u5199"},"\u5408\u7ea6\u7f16\u5199"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},'// SPDX-License-Identifier: MIT\n\nimport "openzeppelin/contracts-upgradeable/token/ERC20Upgradeable.sol";\nimport "openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol";\nimport "openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol";\n\ncontract MyTokenUpgradeable is Initializable,ERC20Upgradeable, OwnableUpgradeable {\n    \n    // only be call once (**)\n    function initialize() external initializer {\n        _ERC20_init("mytoken","my");\n        _Ownable_init();\n    }\n    \n    function mint(address to, uint amount) external onlyOwner {\n        _mint(to, amount);\n    }\n}\n')))}u.isMDXComponent=!0}}]);