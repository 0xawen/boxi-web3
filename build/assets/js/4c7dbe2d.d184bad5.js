"use strict";(self.webpackChunkweb_3_blog=self.webpackChunkweb_3_blog||[]).push([[9306],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>y});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(t),y=i,m=u["".concat(l,".").concat(y)]||u[y]||d[y]||a;return t?r.createElement(m,o(o({ref:n},c),{},{components:t})):r.createElement(m,o({ref:n},c))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=u;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:i,o[1]=p;for(var s=2;s<a;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6283:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=t(7462),i=(t(7294),t(3905));const a={},o="mapping",p={unversionedId:"solidity/solidity_basic/mapping",id:"solidity/solidity_basic/mapping",title:"mapping",description:"mapping (keyType => valueType)",source:"@site/docs/solidity/solidity_basic/12_mapping.md",sourceDirName:"solidity/solidity_basic",slug:"/solidity/solidity_basic/mapping",permalink:"/docs/solidity/solidity_basic/mapping",draft:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{},sidebar:"solidity",previous:{title:"for  while loop",permalink:"/docs/solidity/solidity_basic/for_while"},next:{title:"\u6570\u7ec4",permalink:"/docs/solidity/solidity_basic/array"}},l={},s=[],c={toc:s};function d(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mapping"},"mapping"),(0,i.kt)("p",null,"mapping (keyType => valueType)"),(0,i.kt)("p",null,"keyType \u53ef\u4ee5\u662f bytes, string, \u4efb\u610f contract"),(0,i.kt)("p",null,"valueType \u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\ncontract Mapping {\n    mapping(address => uint) public myMap;\n    \n    function get(address _addr) public view returns (uint) {\n        // \u5982\u679c \u503c\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u4f1a\u8fd4\u56de\u9ed8\u8ba4\u503c\n        return myMap[_addr];\n    }\n    \n    function set(address _addr, uint _i) public {\n        myMap[_addr] = _i;\n    }\n    \n    function remove(address _addr) public {\n        // \u91cd\u65b0\u8bbe\u7f6e\u503c\u4e3a\u9ed8\u8ba4\u503c\n        delete myMap[_addr];\n    }\n}\n\ncontract NestedMapping {\n    // \u5d4c\u5957map\n    mapping(address => mapping(uint => bool)) public nested;\n    // \u53ef\u4ee5\u4ece\u5d4c\u5957\u7684map \u4e2d\u83b7\u53d6\u6570\u636e\n    // \u5c3d\u7ba1\u4ed6\u6ca1\u6709\u521d\u59cb\u5316\n    function get(address _addr1, uint _i) public view returns (bool) {\n        return nested[_addr1][_i];\n    }\n    \n    function set(address _addr1, uint _i, bool _boo) public {\n        nested[_addr1][_i] = _boo;\n    }\n    \n    function remove(address _addr1, uint _i) public {\n        delete nested[_addr1][_i];\n    }\n}\n")))}d.isMDXComponent=!0}}]);