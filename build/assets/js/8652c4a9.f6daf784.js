"use strict";(self.webpackChunkweb_3_blog=self.webpackChunkweb_3_blog||[]).push([[4823],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),f=a,b=p["".concat(s,".").concat(f)]||p[f]||d[f]||l;return n?r.createElement(b,i(i({ref:t},u),{},{components:n})):r.createElement(b,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7211:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={},i="\u53d1\u9001 eth \u7684\u51fd\u6570(transfer, send, call)",o={unversionedId:"solidity/solidity_basic/sending_eth",id:"solidity/solidity_basic/sending_eth",title:"\u53d1\u9001 eth \u7684\u51fd\u6570(transfer, send, call)",description:"\u5982\u4f55\u53d1\u9001eth",source:"@site/docs/solidity/solidity_basic/29_sending_eth.md",sourceDirName:"solidity/solidity_basic",slug:"/solidity/solidity_basic/sending_eth",permalink:"/docs/solidity/solidity_basic/sending_eth",draft:!1,tags:[],version:"current",sidebarPosition:29,frontMatter:{},sidebar:"solidity",previous:{title:"payable \u5173\u952e\u5b57",permalink:"/docs/solidity/solidity_basic/payable"},next:{title:"\u56de\u9000\u51fd\u6570",permalink:"/docs/solidity/solidity_basic/fallback"}},s={},c=[{value:"\u5982\u4f55\u53d1\u9001eth",id:"\u5982\u4f55\u53d1\u9001eth",level:3},{value:"\u5982\u4f55\u63a5\u6536eth",id:"\u5982\u4f55\u63a5\u6536eth",level:3},{value:"\u5e94\u8be5\u4f7f\u7528\u90a3\u4e2a\u51fd\u6570",id:"\u5e94\u8be5\u4f7f\u7528\u90a3\u4e2a\u51fd\u6570",level:3}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u53d1\u9001-eth-\u7684\u51fd\u6570transfer-send-call"},"\u53d1\u9001 eth \u7684\u51fd\u6570(transfer, send, call)"),(0,a.kt)("h3",{id:"\u5982\u4f55\u53d1\u9001eth"},"\u5982\u4f55\u53d1\u9001eth"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"transfer (2300gas, throws error)"),(0,a.kt)("li",{parentName:"ul"},"send (2300 gas, returns bool)"),(0,a.kt)("li",{parentName:"ul"},"call(forward all gas or set gas, returns bool)")),(0,a.kt)("h3",{id:"\u5982\u4f55\u63a5\u6536eth"},"\u5982\u4f55\u63a5\u6536eth"),(0,a.kt)("p",null,"\u4e00\u4e2a\u5408\u7ea6\u63a5\u53d7eth \u81f3\u5c11\u62e5\u6709\u4ee5\u4e0b\u7684\u4e00\u4e2a\u51fd\u6570\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"receive()  external payable"),(0,a.kt)("li",{parentName:"ul"},"fallback() external payable")),(0,a.kt)("p",null,"\u5982\u679c msg.data \u662f\u7a7a\u7684\u8c03\u7528 receive(),  \u5426\u5219 fallback() \u88ab\u8c03\u7528\u3002"),(0,a.kt)("h3",{id:"\u5e94\u8be5\u4f7f\u7528\u90a3\u4e2a\u51fd\u6570"},"\u5e94\u8be5\u4f7f\u7528\u90a3\u4e2a\u51fd\u6570"),(0,a.kt)("p",null,"\u5efa\u8bae\u4f7f\u7528call \u548c\u91cd\u5165guiard \u76f8\u7ed3\u5408\u7684\u65b9\u6cd5\u3002"),(0,a.kt)("p",null,"\u91cd\u5165\u5b88\u536b\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u5728\u8c03\u7528\u5176\u4ed6\u5408\u7ea6\u4e4b\u524d\u8fdb\u884c\u6240\u6709\u72b6\u6001\u66f4\u6539")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u4f7f\u7528\u91cd\u5165\u4fdd\u62a4 modifier"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},'\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\ncontract ReceiveEther {\n    /*\n    Which function is called, fallback() or receive()?\n\n           send Ether\n               |\n         msg.data is empty?\n              / \\\n            yes  no\n            /     \\\nreceive() exists?  fallback()\n         /   \\\n        yes   no\n        /      \\\n    receive()   fallback()\n    */\n\n    // Function to receive Ether. msg.data must be empty\n    receive() external payable {}\n\n    // Fallback function is called when msg.data is not empty\n    fallback() external payable {}\n\n    function getBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n\ncontract SendEther {\n    function sendViaTransfer(address payable _to) public payable {\n        // This function is no longer recommended for sending Ether.\n        _to.transfer(msg.value);\n    }\n\n    function sendViaSend(address payable _to) public payable {\n        // Send returns a boolean value indicating success or failure.\n        // This function is not recommended for sending Ether.\n        bool sent = _to.send(msg.value);\n        require(sent, "Failed to send Ether");\n    }\n\n    function sendViaCall(address payable _to) public payable {\n        // Call returns a boolean value indicating success or failure.\n        // This is the current recommended method to use.\n        (bool sent, bytes memory data) = _to.call{value: msg.value}("");\n        require(sent, "Failed to send Ether");\n    }\n}\n')))}d.isMDXComponent=!0}}]);