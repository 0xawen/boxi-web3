"use strict";(self.webpackChunkweb_3_blog=self.webpackChunkweb_3_blog||[]).push([[3148],{3905:(n,t,o)=>{o.d(t,{Zo:()=>l,kt:()=>f});var e=o(7294);function r(n,t,o){return t in n?Object.defineProperty(n,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[t]=o,n}function a(n,t){var o=Object.keys(n);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(n);t&&(e=e.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),o.push.apply(o,e)}return o}function c(n){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(n,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(o,t))}))}return n}function u(n,t){if(null==n)return{};var o,e,r=function(n,t){if(null==n)return{};var o,e,r={},a=Object.keys(n);for(e=0;e<a.length;e++)o=a[e],t.indexOf(o)>=0||(r[o]=n[o]);return r}(n,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(e=0;e<a.length;e++)o=a[e],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(n,o)&&(r[o]=n[o])}return r}var i=e.createContext({}),p=function(n){var t=e.useContext(i),o=t;return n&&(o="function"==typeof n?n(t):c(c({},t),n)),o},l=function(n){var t=p(n.components);return e.createElement(i.Provider,{value:t},n.children)},s={inlineCode:"code",wrapper:function(n){var t=n.children;return e.createElement(e.Fragment,{},t)}},m=e.forwardRef((function(n,t){var o=n.components,r=n.mdxType,a=n.originalType,i=n.parentName,l=u(n,["components","mdxType","originalType","parentName"]),m=p(o),f=r,y=m["".concat(i,".").concat(f)]||m[f]||s[f]||a;return o?e.createElement(y,c(c({ref:t},l),{},{components:o})):e.createElement(y,c({ref:t},l))}));function f(n,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof n||r){var a=o.length,c=new Array(a);c[0]=m;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=n,u.mdxType="string"==typeof n?n:r,c[1]=u;for(var p=2;p<a;p++)c[p]=o[p];return e.createElement.apply(null,c)}return e.createElement.apply(null,o)}m.displayName="MDXCreateElement"},8214:(n,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>s,frontMatter:()=>a,metadata:()=>u,toc:()=>p});var e=o(7462),r=(o(7294),o(3905));const a={},c="\u4f7f\u7528\u5408\u7ea6\u53d1\u884c\u81ea\u5df1\u7684token",u={unversionedId:"rust_contract/solana/solana_\u9879\u76ee/crypto_currency",id:"rust_contract/solana/solana_\u9879\u76ee/crypto_currency",title:"\u4f7f\u7528\u5408\u7ea6\u53d1\u884c\u81ea\u5df1\u7684token",description:"1 \u521b\u5efa\u9879\u76ee",source:"@site/docs\\rust_contract\\solana\\05_solana_\u9879\u76ee\\crypto_currency.md",sourceDirName:"rust_contract/solana/05_solana_\u9879\u76ee",slug:"/rust_contract/solana/solana_\u9879\u76ee/crypto_currency",permalink:"/docs/rust_contract/solana/solana_\u9879\u76ee/crypto_currency",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"rust_contract",previous:{title:"\u4f17\u7b79dapp",permalink:"/docs/rust_contract/solana/solana_\u9879\u76ee/crowdfunding_dapp"},next:{title:"\u521b\u5efa\u4e00\u4e2amail dapp",permalink:"/docs/rust_contract/solana/solana_\u9879\u76ee/mail_dapp"}},i={},p=[{value:"1 \u521b\u5efa\u9879\u76ee",id:"1-\u521b\u5efa\u9879\u76ee",level:2},{value:"2 \u5f15\u5165 anchor spl \u5e93",id:"2-\u5f15\u5165-anchor-spl-\u5e93",level:2},{value:"3 \u7f16\u5199\u7a0b\u5e8f\u7684\u51fd\u6570",id:"3-\u7f16\u5199\u7a0b\u5e8f\u7684\u51fd\u6570",level:2},{value:"4 \u7f16\u5199\u51fd\u6570\u7684\u903b\u8f91",id:"4-\u7f16\u5199\u51fd\u6570\u7684\u903b\u8f91",level:2},{value:"5 \u5b66\u4e60\u5982\u4f55\u5e8f\u5217\u5316\u548c\u53d1\u5e8f\u5217\u5316\u6570\u636e",id:"5-\u5b66\u4e60\u5982\u4f55\u5e8f\u5217\u5316\u548c\u53d1\u5e8f\u5217\u5316\u6570\u636e",level:2},{value:"6 \u5b9a\u4e49\u7b2c\u4e00\u4e2a\u8d26\u53f7\u7ed3\u6784",id:"6-\u5b9a\u4e49\u7b2c\u4e00\u4e2a\u8d26\u53f7\u7ed3\u6784",level:2},{value:"7 \u5b9a\u4e49\u6240\u6709\u8d26\u53f7\u7ed3\u6784",id:"7-\u5b9a\u4e49\u6240\u6709\u8d26\u53f7\u7ed3\u6784",level:2},{value:"8 \u8de8\u5408\u7ea6\u8c03\u7528",id:"8-\u8de8\u5408\u7ea6\u8c03\u7528",level:2},{value:"9 \u7b2c\u4e00\u4e2a\u8de8\u5408\u7ea6\u8c03\u7528",id:"9-\u7b2c\u4e00\u4e2a\u8de8\u5408\u7ea6\u8c03\u7528",level:2},{value:"10 \u5b9e\u73b0\u6240\u6709\u8de8\u5408\u7ea6\u8c03\u7528",id:"10-\u5b9e\u73b0\u6240\u6709\u8de8\u5408\u7ea6\u8c03\u7528",level:2},{value:"11 \u6700\u540e\u4e00\u4e2a\u5b9e\u73b0",id:"11-\u6700\u540e\u4e00\u4e2a\u5b9e\u73b0",level:2},{value:"12 \u68c0\u67e5\u4ee3\u7801",id:"12-\u68c0\u67e5\u4ee3\u7801",level:2},{value:"13 \u7f16\u5199\u6d4b\u8bd5",id:"13-\u7f16\u5199\u6d4b\u8bd5",level:2}],l={toc:p};function s(n){let{components:t,...o}=n;return(0,r.kt)("wrapper",(0,e.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u4f7f\u7528\u5408\u7ea6\u53d1\u884c\u81ea\u5df1\u7684token"},"\u4f7f\u7528\u5408\u7ea6\u53d1\u884c\u81ea\u5df1\u7684token"),(0,r.kt)("h2",{id:"1-\u521b\u5efa\u9879\u76ee"},"1 \u521b\u5efa\u9879\u76ee"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"anchor init mymoneydapp\ncd mymoneydapp\n\nanchor build\n")),(0,r.kt)("h2",{id:"2-\u5f15\u5165-anchor-spl-\u5e93"},"2 \u5f15\u5165 anchor spl \u5e93"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"programs/mymoneydapp/Cargo.toml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'anchor-spl = "0.17.0"\nspl-token = { version = "3.1.1", features = ["no-entrypoint"] }\n')),(0,r.kt)("p",null,"\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"programs/mymoneydapp/src/lib.rs")," \u4f7f\u7528"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"use anchor_spl::token::{self, Burn, MintTo, SetAuthority, Transfer};\n")),(0,r.kt)("h2",{id:"3-\u7f16\u5199\u7a0b\u5e8f\u7684\u51fd\u6570"},"3 \u7f16\u5199\u7a0b\u5e8f\u7684\u51fd\u6570"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"programs/mymoneydapp/src/lib.rs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"#[program]\npub mod mymoneydapp{\n    pub fn proxy_transfer(ctx: Context<ProxyTransfer>, amount: u64) -> ProgramResult {\n\n    }\n    \n    pub fn proxy_mint_to(ctx: Context<ProxyMintTo>, amount: u64) -> ProgramResult {\n    \n    }\n    \n    pub fn proxy_burn(ctx: Context<ProxyBurn>, amount: u64) -> ProgramResult {\n    \n    }\n    \n    pub fn proxy_set_authority(\n        ctx: Context<ProxySetAuthority>,\n        authority_type: AuthorityType,\n        new_authority: Option<Pubkey>,\n    ) -> ProgramResult {\n    \n    }\n}\n")),(0,r.kt)("h2",{id:"4-\u7f16\u5199\u51fd\u6570\u7684\u903b\u8f91"},"4 \u7f16\u5199\u51fd\u6570\u7684\u903b\u8f91"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"#[program]\npub mod mymoneydapp{\n    pub fn proxy_transfer(ctx: Context<ProxyTransfer>, amount: u64) -> ProgramResult {\n        token::transfer(ctx.accounts.into(), amount)\n    }\n    \n    pub fn proxy_mint_to(ctx: Context<ProxyMintTo>, amount: u64) -> ProgramResult {\n        token::mint_to(ctx.accounts.into(), amount)\n    }\n    \n    pub fn proxy_burn(ctx: Context<ProxyBurn>, amount: u64) -> ProgramResult {\n        token::burn(ctx.accounts.into(), amount)\n    }\n    \n    pub fn proxy_set_authority(\n        ctx: Context<ProxySetAuthority>,\n        authority_type: AuthorityType,\n        new_authority: Option<Pubkey>,\n    ) -> ProgramResult {\n        token::set_authority(ctx.accounts.into(), authority_type.into(), new_authority)\n    }\n}\n")),(0,r.kt)("h2",{id:"5-\u5b66\u4e60\u5982\u4f55\u5e8f\u5217\u5316\u548c\u53d1\u5e8f\u5217\u5316\u6570\u636e"},"5 \u5b66\u4e60\u5982\u4f55\u5e8f\u5217\u5316\u548c\u53d1\u5e8f\u5217\u5316\u6570\u636e"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"#[derive(AnchorSerialize, AnchorDeserialize)]\npub enum AuthorityType {\n    MintTokens,\n    FreezeAccount,\n    AccountOwner,\n    CloseAccount\n}\n")),(0,r.kt)("h2",{id:"6-\u5b9a\u4e49\u7b2c\u4e00\u4e2a\u8d26\u53f7\u7ed3\u6784"},"6 \u5b9a\u4e49\u7b2c\u4e00\u4e2a\u8d26\u53f7\u7ed3\u6784"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"#[derive(Accounts)]\npub struct ProxyTransfer<'info> {\n    #[account(signer)]\n    pub authority: AccountInfo<'info>,\n    #[account(mut)]\n    pub from: AccountInfo<'info>,\n    #[account(mut)]\n    pub to: AccountInfo<'info>,\n    pub token_program: AccountInfo<'info>,\n}\n")),(0,r.kt)("h2",{id:"7-\u5b9a\u4e49\u6240\u6709\u8d26\u53f7\u7ed3\u6784"},"7 \u5b9a\u4e49\u6240\u6709\u8d26\u53f7\u7ed3\u6784"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"\n#[derive(Accounts)]\npub struct ProxyMintTo<'info> {\n    #[account(signer)]\n    pub authority: AccountInfo<'info>,\n    #[account(mut)]\n    pub mint: AccountInfo<'info>,\n    #[account(mut)]\n    pub to: AccountInfo<'info>,\n    pub token_program: AccountInfo<'info>,\n}\n\n#[derive(Accounts)]\npub struct ProxyBurn<'info> {\n    #[account(signer)]\n    pub authority: AccountInfo<'info>,\n    #[account(mut)]\n    pub mint: AccountInfo<'info>,\n    #[account(mut)]\n    pub to: AccountInfo<'info>,\n    pub token_program: AccountInfo<'info>,\n}\n\n#[derive(Accounts)]\npub struct ProxySetAuthority<'info> {\n    #[account(signer)]\n    pub current_authority: AccountInfo<'info>,\n    #[account(mut)]\n    pub account_or_mint: AccountInfo<'info>,\n    pub token_program: AccountInfo<'info>,\n}\n")),(0,r.kt)("h2",{id:"8-\u8de8\u5408\u7ea6\u8c03\u7528"},"8 \u8de8\u5408\u7ea6\u8c03\u7528"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"impl <'a, 'b, 'c, 'info> From<&mut ProxyTransfer<'info>> \n    for CpiContext<'a, 'b, 'c, 'info, Transfer<'info>>\n{\n\n}\n\nimpl<'a, 'b, 'c, 'info> From<&mut ProxyMintTo<'info>>\n    for CpiContext<'a, 'b, 'c, 'info, MintTo<'info>>\n{\n\n}\n\nimpl<'a, 'b, 'c, 'info> From<&mut ProxyBurn<'info>> \n    for CpiContext<'a, 'b, 'c, 'info, Burn<'info>> {\n\n}\n\nimpl<'a, 'b, 'c, 'info> From<&mut ProxySetAuthority<'info>>\n    for CpiContext<'a, 'b, 'c, 'info, SetAuthority<'info>>\n{\n\n}\n")),(0,r.kt)("h2",{id:"9-\u7b2c\u4e00\u4e2a\u8de8\u5408\u7ea6\u8c03\u7528"},"9 \u7b2c\u4e00\u4e2a\u8de8\u5408\u7ea6\u8c03\u7528"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"impl<'a, 'b, 'c, 'info> From<&mut ProxyTransfer<'info>>\n    for CpiContext<'a, 'b, 'c, 'info, Transfer<'info>>\n{\n    fn from(accounts: &mut ProxyTransfer<'info>) -> CpiContext<'a, 'b, 'c, 'info, Transfer<'info>> {\n        let cpi_accounts = Transfer {\n            from: accounts.from.clone(),\n            to: accounts.to.clone(),\n            authority: accounts.authority.clone(),\n        };\n        let cpi_program = accounts.token_program.clone();\n        CpiContext::new(cpi_program, cpi_accounts)\n    }\n}\n")),(0,r.kt)("h2",{id:"10-\u5b9e\u73b0\u6240\u6709\u8de8\u5408\u7ea6\u8c03\u7528"},"10 \u5b9e\u73b0\u6240\u6709\u8de8\u5408\u7ea6\u8c03\u7528"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"\nimpl<'a, 'b, 'c, 'info> From<&mut ProxyMintTo<'info>>\n    for CpiContext<'a, 'b, 'c, 'info, MintTo<'info>>\n{\n    fn from(accounts: &mut ProxyMintTo<'info>) -> CpiContext<'a, 'b, 'c, 'info, MintTo<'info>> {\n        let cpi_accounts = MintTo {\n            mint: accounts.mint.clone(),\n            to: accounts.to.clone(),\n            authority: accounts.authority.clone(),\n        };\n        let cpi_program = accounts.token_program.clone();\n        CpiContext::new(cpi_program, cpi_accounts)\n    }\n}\nimpl<'a, 'b, 'c, 'info> From<&mut ProxyBurn<'info>> for CpiContext<'a, 'b, 'c, 'info, Burn<'info>> {\n    fn from(accounts: &mut ProxyBurn<'info>) -> CpiContext<'a, 'b, 'c, 'info, Burn<'info>> {\n        let cpi_accounts = Burn {\n            mint: accounts.mint.clone(),\n            to: accounts.to.clone(),\n            authority: accounts.authority.clone(),\n        };\n        let cpi_program = accounts.token_program.clone();\n        CpiContext::new(cpi_program, cpi_accounts)\n    }\n}\n\nimpl<'a, 'b, 'c, 'info> From<&mut ProxySetAuthority<'info>>\n    for CpiContext<'a, 'b, 'c, 'info, SetAuthority<'info>>\n{\n    fn from(\n        accounts: &mut ProxySetAuthority<'info>,\n    ) -> CpiContext<'a, 'b, 'c, 'info, SetAuthority<'info>> {\n        let cpi_accounts = SetAuthority {\n            account_or_mint: accounts.account_or_mint.clone(),\n            current_authority: accounts.current_authority.clone(),\n        };\n        let cpi_program = accounts.token_program.clone();\n        CpiContext::new(cpi_program, cpi_accounts)\n    }\n}\n")),(0,r.kt)("h2",{id:"11-\u6700\u540e\u4e00\u4e2a\u5b9e\u73b0"},"11 \u6700\u540e\u4e00\u4e2a\u5b9e\u73b0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"impl From<AuthorityType> for spl_token::instruction::AuthorityType {\n    fn from(authority_ty: AuthorityType) -> spl_token::instruction::AuthorityType {\n        match authority_ty {\n            AuthorityType::MintTokens => spl_token::instruction::AuthorityType::MintTokens,\n            AuthorityType::FreezeAccount => spl_token::instruction::AuthorityType::FreezeAccount,\n            AuthorityType::AccountOwner => spl_token::instruction::AuthorityType::AccountOwner,\n            AuthorityType::CloseAccount => spl_token::instruction::AuthorityType::CloseAccount,\n        }\n    }\n}\n")),(0,r.kt)("h2",{id:"12-\u68c0\u67e5\u4ee3\u7801"},"12 \u68c0\u67e5\u4ee3\u7801"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"anchor build\n")),(0,r.kt)("h2",{id:"13-\u7f16\u5199\u6d4b\u8bd5"},"13 \u7f16\u5199\u6d4b\u8bd5"),(0,r.kt)("p",null,"todo"))}s.isMDXComponent=!0}}]);