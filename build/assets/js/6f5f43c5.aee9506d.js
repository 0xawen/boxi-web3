"use strict";(self.webpackChunkweb_3_blog=self.webpackChunkweb_3_blog||[]).push([[5582],{3905:(e,t,n)=>{n.d(t,{Zo:()=>b,kt:()=>p});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),d=c(n),p=a,f=d["".concat(l,".").concat(p)]||d[p]||u[p]||o;return n?r.createElement(f,s(s({ref:t},b),{},{components:n})):r.createElement(f,s({ref:t},b))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7093:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},s="\u8bbf\u95ee\u79c1\u6709\u6570\u636e",i={unversionedId:"solidity/solidity_hack/access_private_data",id:"solidity/solidity_hack/access_private_data",title:"\u8bbf\u95ee\u79c1\u6709\u6570\u636e",description:"\u6f0f\u6d1e\u63cf\u8ff0\uff1a",source:"@site/docs/solidity/solidity_hack/access_private_data.md",sourceDirName:"solidity/solidity_hack",slug:"/solidity/solidity_hack/access_private_data",permalink:"/docs/solidity/solidity_hack/access_private_data",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"solidity",previous:{title:"\u5408\u7ea6\u81ea\u6bc1\u6f0f\u6d1e",permalink:"/docs/solidity/solidity_hack/self_destruct"},next:{title:"\u59d4\u6258\u8c03\u7528",permalink:"/docs/solidity/solidity_hack/delegatecall"}},l={},c=[{value:"\u9884\u9632\u6280\u672f",id:"\u9884\u9632\u6280\u672f",level:3}],b={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u8bbf\u95ee\u79c1\u6709\u6570\u636e"},"\u8bbf\u95ee\u79c1\u6709\u6570\u636e"),(0,a.kt)("p",null,"\u6f0f\u6d1e\u63cf\u8ff0\uff1a"),(0,a.kt)("p",null,"\u5728\u5408\u7ea6\u4e2d\u7684\u6240\u6709\u6570\u636e\u90fd\u53ef\u4ee5\u88ab\u8bfb\u3002"),(0,a.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u8bfb\u53d6 ",(0,a.kt)("inlineCode",{parentName:"p"},"pravate"),"\u6570\u636e\u3002"),(0,a.kt)("p",null,"\u53ef\u4ee5\u5b66\u4e60\u5230solidity \u662f\u5982\u4f55\u5b58\u50a8\u53d8\u91cf\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\n# Storage\n- 2 ** 256 slots\n- 32 bytes for each slot\n- \u6570\u636e\u6309\u58f0\u660e\u987a\u5e8f\u4f9d\u6b21\u5b58\u50a8\n- \u4f18\u5316\u5b58\u50a8\u4ee5\u8282\u7701\u7a7a\u95f4.\n- \u76f8\u90bb\u53d8\u91cf\u9002\u5408\u5355\u4e2a 32\u5b57\u8282\uff0c\u7136\u540e\u5b83\u4eec\u88ab\u6253\u5305\u5230\u540c\u4e00\u4e2a\u69fd\u4e2d\uff0c\u4ece\u53f3\u8fb9\u5f00\u59cb\n- storage is optimized to save space. If neighboring variables fit in a single\n  32 bytes, then they are packed into the same slot, starting from the right\n*/\n\ncontract Vault {\n    // slot 0\n    uint public count = 123;\n    // slot 1\n    address public owner = msg.sender;\n    bool public isTrue = true;\n    uint16 public u16 = 31;\n    // slot 2\n    bytes32 private password;\n\n    // constants do not use storage\n    uint public constant someConst = 123;\n\n    // slot 3, 4, 5 (one for each array element)\n    bytes32[3] public data;\n\n    struct User {\n        uint id;\n        bytes32 password;\n    }\n\n    // slot 6 - length of array\n    // starting from slot hash(6) - array elements\n    // slot where array element is stored = keccak256(slot)) + (index * elementSize)\n    // where slot = 6 and elementSize = 2 (1 (uint) +  1 (bytes32))\n    User[] private users;\n\n    // slot 7 - empty\n    // entries are stored at hash(key, slot)\n    // where slot = 7, key = map key\n    mapping(uint => User) private idToUser;\n\n    constructor(bytes32 _password) {\n        password = _password;\n    }\n\n    function addUser(bytes32 _password) public {\n        User memory user = User({id: users.length, password: _password});\n\n        users.push(user);\n        idToUser[user.id] = user;\n    }\n\n    function getArrayLocation(\n        uint slot,\n        uint index,\n        uint elementSize\n    ) public pure returns (uint) {\n        return uint(keccak256(abi.encodePacked(slot))) + (index * elementSize);\n    }\n\n    function getMapLocation(uint slot, uint key) public pure returns (uint) {\n        return uint(keccak256(abi.encodePacked(key, slot)));\n    }\n}\n\n/*\nslot 0 - count\nweb3.eth.getStorageAt("0x3505a02BCDFbb225988161a95528bfDb279faD6b", 0, console.log)\nslot 1 - u16, isTrue, owner\nweb3.eth.getStorageAt("0x3505a02BCDFbb225988161a95528bfDb279faD6b", 1, console.log)\nslot 2 - password\nweb3.eth.getStorageAt("0x3505a02BCDFbb225988161a95528bfDb279faD6b", 2, console.log)\n\nslot 6 - array length\ngetArrayLocation(6, 0, 2)\nweb3.utils.numberToHex("111414077815863400510004064629973595961579173665589224203503662149373724986687")\nNote: We can also use web3 to get data location\nweb3.utils.soliditySha3({ type: "uint", value: 6 })\n1st user\nweb3.eth.getStorageAt("0x3505a02BCDFbb225988161a95528bfDb279faD6b", "0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f", console.log)\nweb3.eth.getStorageAt("0x3505a02BCDFbb225988161a95528bfDb279faD6b", "0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40", console.log)\nNote: use web3.toAscii to convert bytes32 to alphabet\n2nd user\nweb3.eth.getStorageAt("0x3505a02BCDFbb225988161a95528bfDb279faD6b", "0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41", console.log)\nweb3.eth.getStorageAt("0x3505a02BCDFbb225988161a95528bfDb279faD6b", "0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42", console.log)\n\nslot 7 - empty\ngetMapLocation(7, 1)\nweb3.utils.numberToHex("81222191986226809103279119994707868322855741819905904417953092666699096963112")\nNote: We can also use web3 to get data location\nweb3.utils.soliditySha3({ type: "uint", value: 1 }, {type: "uint", value: 7})\nuser 1\nweb3.eth.getStorageAt("0x3505a02BCDFbb225988161a95528bfDb279faD6b", "0xb39221ace053465ec3453ce2b36430bd138b997ecea25c1043da0c366812b828", console.log)\nweb3.eth.getStorageAt("0x3505a02BCDFbb225988161a95528bfDb279faD6b", "0xb39221ace053465ec3453ce2b36430bd138b997ecea25c1043da0c366812b829", console.log)\n*/\n')),(0,a.kt)("h3",{id:"\u9884\u9632\u6280\u672f"},"\u9884\u9632\u6280\u672f"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e0d\u5728\u8981\u94fe\u4e0a\u5b58\u653e\u654f\u611f\u4fe1\u606f")))}u.isMDXComponent=!0}}]);