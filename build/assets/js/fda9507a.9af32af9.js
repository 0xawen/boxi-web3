"use strict";(self.webpackChunkweb_3_blog=self.webpackChunkweb_3_blog||[]).push([[1899],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),y=s(t),d=i,f=y["".concat(u,".").concat(d)]||y[d]||p[d]||a;return t?r.createElement(f,o(o({ref:n},c),{},{components:t})):r.createElement(f,o({ref:n},c))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=y;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},9558:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=t(7462),i=(t(7294),t(3905));const a={},o="\u5408\u7ea6\u5e93",l={unversionedId:"solidity/solidity_basic/library",id:"solidity/solidity_basic/library",title:"\u5408\u7ea6\u5e93",description:"\u5e93\u7c7b\u4f3c\u4e8e\u5408\u7ea6\u3002\u4f46\u662f\u4e0d\u80fd\u591f\u5b9a\u4e49\u72b6\u6001\u53d8\u91cf\uff0c\u540c\u65f6\u4e0d\u80fd\u591f\u53d1\u9001eth.",source:"@site/docs/solidity/solidity_basic/38_library.md",sourceDirName:"solidity/solidity_basic",slug:"/solidity/solidity_basic/library",permalink:"/docs/solidity/solidity_basic/library",draft:!1,tags:[],version:"current",sidebarPosition:38,frontMatter:{},sidebar:"solidity",previous:{title:"\u4f7f\u7528import \u5bfc\u5165\u5176\u4ed6\u5408\u7ea6",permalink:"/docs/solidity/solidity_basic/import"},next:{title:"abi decode",permalink:"/docs/solidity/solidity_basic/abi_decode"}},u={},s=[],c={toc:s};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u5408\u7ea6\u5e93"},"\u5408\u7ea6\u5e93"),(0,i.kt)("p",null,"\u5e93\u7c7b\u4f3c\u4e8e\u5408\u7ea6\u3002\u4f46\u662f\u4e0d\u80fd\u591f\u5b9a\u4e49\u72b6\u6001\u53d8\u91cf\uff0c\u540c\u65f6\u4e0d\u80fd\u591f\u53d1\u9001eth."),(0,i.kt)("p",null,"\u5982\u679c\u6240\u6709\u5e93\u51fd\u6570\u90fd\u662f\u5185\u90e8\u7684\uff0c\u5219\u5c06\u5e93\u5d4c\u5165\u5230\u5408\u7ea6\u4e2d\u3002"),(0,i.kt)("p",null,"\u5426\u5219\uff0c\u5fc5\u987b\u5148\u90e8\u7f72\u5e93\uff0c\u7136\u540e\u5728\u90e8\u7f72\u5408\u7ea6\u4e4b\u524d\u8fdb\u884c\u94fe\u63a5."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nlibrary SafeMath {\n    function add(uint x, uint y) internal pure returns (uint) {\n        uint z = x + y;\n        require(z >= x, "uint overflow");\n\n        return z;\n    }\n}\n\nlibrary Math {\n    function sqrt(uint y) internal pure returns (uint z) {\n        if (y > 3) {\n            z = y;\n            uint x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n        // else z = 0 (default value)\n    }\n}\n\ncontract TestSafeMath {\n    using SafeMath for uint;\n\n    uint public MAX_UINT = 2**256 - 1;\n\n    function testAdd(uint x, uint y) public pure returns (uint) {\n        return x.add(y);\n    }\n\n    function testSquareRoot(uint x) public pure returns (uint) {\n        return Math.sqrt(x);\n    }\n}\n\n// Array function to delete element at index and re-organize the array\n// so that their are no gaps between the elements.\nlibrary Array {\n    function remove(uint[] storage arr, uint index) public {\n        // Move the last element into the place to delete\n        require(arr.length > 0, "Can\'t remove from empty array");\n        arr[index] = arr[arr.length - 1];\n        arr.pop();\n    }\n}\n\ncontract TestArray {\n    using Array for uint[];\n\n    uint[] public arr;\n\n    function testArrayRemove() public {\n        for (uint i = 0; i < 3; i++) {\n            arr.push(i);\n        }\n\n        arr.remove(1);\n\n        assert(arr.length == 2);\n        assert(arr[0] == 0);\n        assert(arr[1] == 2);\n    }\n}\n')))}p.isMDXComponent=!0}}]);